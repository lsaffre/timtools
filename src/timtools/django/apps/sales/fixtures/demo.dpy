#coding: utf8
## Copyright 2009 Luc Saffre

## This file is part of the Lino project.

## Lino is free software; you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.

## Lino is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
## or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
## License for more details.

## You should have received a copy of the GNU General Public License
## along with Lino; if not, write to the Free Software Foundation,
## Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

import time
from datetime import date
from dateutil import parser as dateparser
from lino.django.apps.sales.models import *
from lino.django.utils.instantiator import Instantiator, i2d

shippingmode = Instantiator(ShippingMode,"name").build
paymentterm = Instantiator(PaymentTerm,"name").build
salesrule = Instantiator(SalesRule).build
customer = Instantiator(Customer).build

imode = Instantiator(InvoicingMode,
  "id channel name advance_days journal").build

def objects():
    yield shippingmode("cash and carry")
    yield shippingmode("regular mail")

    cash = paymentterm("Cash")
    yield cash
    yield paymentterm("7 days net",days=7)
    yield paymentterm("Prepayment",days=7)
    
    for ct in contacts.Contact.objects.all():
        yield Customer.from_parent(ct)
    
    #ORD = journals.get_journal_by_docclass(Order)
    #INV = journals.get_journal_by_docclass(Invoice)
        
    ORD = Order.create_journal("ORD",name="Orders")
    #ORD = journals.get_journal("ORD")
    #INV = journals.get_journal("INV")
    yield ORD
    #~ INV = Invoice.create_journal("INV",\
      #~ account=ledger.Account.objects.get(pk="4000"))
    INV = Invoice.create_journal("INV",account="4000",name="Invoices")
    yield INV
    
    
    invoice = Instantiator(Invoice,
      "customer creation_date imode payment_term shipping_mode",
      journal=INV).build

    order = Instantiator(Order,
    """customer creation_date start_date cycle imode 
    payment_term shipping_mode""",journal=ORD).build
    
    yield imode('e','E','By e-mail',2,INV)
    yield imode('p','P','By snail mail',10,INV)
        
    salesrule(imode='e',shipping_mode=1,payment_term=2)

    furniture = ProductCat.objects.get(name="Furniture")
    hosting = 5
    
    o = order(100,"2008-09-23","2008-09-24","M","e",2,1,
        sales_remark="monthly order")
    o.add_item(hosting,1)
    yield o
    
    yield o.make_invoice(today=date(2008,10,28))
        
    i = invoice(2,"2008-10-29","e",2,1,
      sales_remark="first manual invoice")
    i.add_item(1,1)
    i.add_item(2,4)
    yield i
    
    yield o.make_invoice(today=date(2009,04,11))
        
    i = invoice(3,date(2009,04,11),"e",2,1,
        sales_remark="second manual invoice")
    i.add_item(3,1)
    i.add_item(4,4)
    yield i
    
    #d = '2009-04-12'
    #d = '20090412'
    d = i2d(20090412)
    #d = date(2009,4,12)
    o2 = order(4,d,d,"Y","p",2,1,sales_remark="yearly order")
    o2.add_item(3,1)
    o2.add_item(4,4)
    #print o2
    #o2.save()
    yield o2
    yield o2.make_invoice(today=d)
    
    i = invoice(4,date(2009,04,13),"e",2,1,
      sales_remark="third manual invoice with discount")
    i.add_item(3,1,discount=10)
    i.add_item(4,4,discount=5)
    yield i
    
    yield o.make_invoice(today=date(2009,05,14))
